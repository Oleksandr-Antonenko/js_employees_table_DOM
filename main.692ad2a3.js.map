{"version":3,"sources":["scripts/main.js"],"names":["page","document","querySelector","employeesTable","employeesTableList","tableContainer","createElement","style","display","append","insertAdjacentHTML","employeeForm","employeeFormFields","querySelectorAll","getBoundingClientRect","bottom","right","width","ValidationError","currentTarget","direction","Error","title","description","type","element","arguments","Notifications","message","top","left","position","setTimeout","remove","checkUserEntries","entries","specification","rules","value","length","entry","name","trim","sendingNewEmployee","addEventListener","e","preventDefault","addingNewEmployee","target","reset","show","error","borderColor","outlineColor","inputs","row","insertRow","forEach","cell","insertCell","editingTableCells","normalize","activeElement","HTMLInputElement","input","cellIndex","cloneNode","previousCellValue","innerHTML","parentNode","classList","add","parseInt","getComputedStyle","focus","key","blur","removeEventListener","sortingEmployees","tHead","closest","rows","sort","sortByTarget","innerText","toLowerCase","a","b","x","textContent","y","localeCompare","selectTableRow","list","previousRowIndex","contains","rowIndex","toggle","isNaN","replace","Number","toLocaleString"],"mappings":"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","file":"main.692ad2a3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n/* => */\n/* ============== GLOBAL VARIABLES ============== */\n/* <= */\n\nconst page = document.querySelector('body');\nconst employeesTable = document.querySelector('table');\nconst employeesTableList = employeesTable.querySelector('tbody');\nconst tableContainer = document.createElement('div');\n\ntableContainer.style.display = 'flex';\n\npage.append(tableContainer);\ntableContainer.append(employeesTable);\n\n/* => */\n/* ============== EMPLOYEE FORM CREATION ============== */\n/* <= */\n\ntableContainer.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\">\n  <label>Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\">\n  </label>\n  <label>Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\">\n  </label>\n  <label>Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n  </label>\n  <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst employeeForm = document.querySelector('.new-employee-form');\nconst employeeFormFields = [...employeeForm.querySelectorAll('input, select')];\n\n/* => */\n/* ============== NOTIFICATION CONTAINER CREATION ============== */\n/* <= */\n\nconst { bottom, right, width } = employeeForm.getBoundingClientRect();\n\ntableContainer.insertAdjacentHTML('afterbegin', `\n  <div class=\"notifications\" style=\"\n    position: absolute;\n    top: ${bottom + 24}px;\n    left: ${right - width}px;\n    display: grid;\n    justify-items: end;\n    gap: 24px;\n  \"></div>\n`);\n\n/* => */\n/* ============== PUSH NOTIFICATION CLASS ============== */\n/* <= */\n\nclass ValidationError extends Error {\n  constructor(title, description, type, element) {\n    super(...arguments);\n    this.title = title;\n    this.description = description;\n    this.type = type;\n    this.element = element;\n  }\n}\n\nclass Notifications {\n  constructor(title, description, type) {\n    this.title = title;\n    this.description = description;\n    this.type = type;\n  }\n\n  show() {\n    const notificationsContainer = document.querySelector('.notifications');\n\n    notificationsContainer.insertAdjacentHTML('afterbegin', `\n      <div class=\"notification ${this.type}\" data-qa=\"notification\">\n          <h2 class=\"title\">${this.title}</h2>\n          <p>${this.description}</p>\n      </div>\n    `);\n\n    const message = document.querySelector('.notification');\n\n    message.style.top = '0px';\n    message.style.left = '0px';\n    message.style.position = 'static';\n\n    setTimeout(() => message.remove(), 2000);\n  }\n}\n\n/* => */\n/* ============== INPUTS ENTRIES VALIDATION ============== */\n/* <= */\n\nfunction checkUserEntries(entries) {\n  const specification = {\n    'name': {\n      rules: (value) => value.length < 4,\n      description: 'Name must contain at least 4 letters',\n    },\n    'age': {\n      rules: (value) => value < 18 || value > 90,\n      description: 'Age must be at least 18 and not more than 90 years old',\n    },\n  };\n\n  for (const entry of entries) {\n    const { name: title, value } = entry;\n\n    if (value === '' || !value.trim()) {\n      throw new ValidationError(\n        `Incorrect ${title}!`,\n        `The ${title} cannot be empty.`,\n        'error',\n        entry\n      );\n    }\n\n    if (value.trim() !== value) {\n      throw new ValidationError(\n        `Incorrect ${title}!`,\n        `The ${title} cannot contain spaces at the beginning or at the end.`,\n        'error',\n        entry\n      );\n    }\n\n    if (specification[title] && specification[title].rules(value)) {\n      throw new ValidationError(\n        `Incorrect ${title}!`,\n        `${specification[title].description}.`,\n        'error',\n        entry\n      );\n    }\n  }\n}\n\n/* => */\n/* ============== SENDING NEW EMPLOYEE ============== */\n/* <= */\n\nfunction sendingNewEmployee() {\n  employeeForm.addEventListener('submit', e => {\n    e.preventDefault();\n\n    try {\n      checkUserEntries(employeeFormFields);\n      addingNewEmployee(employeeFormFields);\n      e.target.reset();\n\n      new Notifications(\n        'Successful!',\n        'New employee has been added.',\n        'success'\n      ).show();\n    } catch (error) {\n      new Notifications(error.title, error.description, error.type).show();\n\n      error.element.style.borderColor = 'red';\n      error.element.style.outlineColor = 'red';\n\n      setTimeout(() => {\n        error.element.style.borderColor = '';\n        error.element.style.outlineColor = '';\n      }, 2000);\n    }\n  });\n}\n\nsendingNewEmployee();\n\n/* => */\n/* ============== ADDING NEW EMPLOYEE ============== */\n/* <= */\n\nfunction addingNewEmployee(inputs) {\n  const row = employeesTableList.insertRow();\n\n  inputs.forEach(({ name: type, value }) => {\n    const cell = row.insertCell();\n\n    cell.addEventListener('dblclick', editingTableCells);\n    cell.append(normalize(type, value));\n  });\n}\n\n/* => */\n/* ============== EDITING EMPLOYEE ============== */\n/* <= */\n\n[...document.querySelectorAll('td')].forEach(cell => {\n  cell.addEventListener('dblclick', editingTableCells);\n});\n\nfunction editingTableCells() {\n  if (document.activeElement instanceof HTMLInputElement) {\n    return;\n  }\n\n  const input = employeeFormFields[this.cellIndex].cloneNode(true);\n  const previousCellValue = this.innerHTML;\n  const cell = this;\n\n  this.parentNode.classList.add('editing');\n  this.parentNode.classList.remove('active');\n  input.style.width = `${parseInt(getComputedStyle(this).width)}px`;\n  input.classList.add('cell-input');\n\n  input.value = normalize(input.name, previousCellValue);\n\n  this.innerHTML = '';\n  this.append(input);\n  input.focus();\n\n  input.addEventListener('keydown', function(e) {\n    if (e.key === 'Enter') {\n      this.blur();\n    }\n  });\n\n  input.addEventListener('blur', function() {\n    if (!this.value) {\n      this.value = normalize(this.name, previousCellValue);\n    }\n\n    try {\n      checkUserEntries([this]);\n      cell.parentNode.classList.remove('editing');\n      cell.innerHTML = normalize(this.name, this.value);\n      cell.addEventListener('dblclick', editingTableCells);\n\n      new Notifications(\n        'Successful!',\n        `Employee ${this.name} has been successfully changed.`,\n        'success'\n      ).show();\n    } catch (error) {\n      new Notifications(error.title, error.description, error.type).show();\n      this.focus();\n    }\n  });\n\n  this.removeEventListener('dblclick', editingTableCells);\n}\n\n/* => */\n/* ============== SORTING EMPLOYEES ============== */\n/* <= */\n\nlet currentTarget;\nlet direction;\n\nfunction sortingEmployees({ tHead: cellsTitles }) {\n  cellsTitles.addEventListener('click', (e) => {\n    const target = e.target.closest('th');\n\n    if (target !== currentTarget) {\n      currentTarget = target;\n      direction = 0;\n    }\n\n    employeesTableList.append(...[...employeesTableList.rows]\n      .sort(sortByTarget(target.innerText.toLowerCase(), 'cells', target)));\n  });\n}\n\nfunction sortByTarget(type, key, { cellIndex }) {\n  direction = direction ? 0 : 1;\n\n  return (a, b) => {\n    const x = normalize(type, a[key][cellIndex].textContent);\n    const y = normalize(type, b[key][cellIndex].textContent);\n\n    if (typeof x !== 'number') {\n      return (direction)\n        ? x.localeCompare(y)\n        : y.localeCompare(x);\n    }\n\n    return (direction)\n      ? x - y\n      : y - x;\n  };\n}\n\nsortingEmployees(employeesTable);\n\n/* => */\n/* ============== SELECT TABLE ROWS ============== */\n/* <= */\n\nfunction selectTableRow(list) {\n  let previousRowIndex;\n\n  list.addEventListener('click', (e) => {\n    const row = e.target.closest('tr');\n\n    if (row.classList.contains('editing')) {\n      row.classList.remove('active');\n\n      return;\n    }\n\n    if (row.rowIndex !== previousRowIndex) {\n      [...list.rows].forEach(element => {\n        element.classList.remove('active');\n      });\n      previousRowIndex = row.rowIndex;\n    }\n\n    row.classList.toggle('active');\n  });\n}\n\nselectTableRow(employeesTableList);\n\n/* => */\n/* ============== NORMALIZE SALARY ============== */\n/* <= */\n\nfunction normalize(type, value) {\n  if (type !== 'salary') {\n    return value;\n  }\n\n  return isNaN(parseInt(value))\n    ? parseInt(value.replace(/[$,]/g, ''))\n    : '$' + Number(value).toLocaleString('en-US');\n}\n"]}